# Generated by Django 5.1.11 on 2025-08-22 15:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('brands', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BrandEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.PositiveIntegerField(help_text='Reference to order ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, help_text='Commission percentage', max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('transaction_date', models.DateTimeField()),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='brands.brand')),
            ],
            options={
                'verbose_name': 'Brand Earnings',
                'verbose_name_plural': 'Brand Earnings',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='BrandImageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_categories', to='brands.brand')),
            ],
            options={
                'verbose_name_plural': 'Brand Image Categories',
                'ordering': ['name'],
                'unique_together': {('brand', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='BrandImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image_url', models.CharField(max_length=500)),
                ('thumbnail_url', models.CharField(blank=True, max_length=500)),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_public', models.BooleanField(default=False, help_text='Available for public templates')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='brands.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='brands.brandimagecategory')),
            ],
            options={
                'verbose_name': 'Brand Image',
                'verbose_name_plural': 'Brand Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BrandTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('template_data', models.JSONField(default=dict, help_text='3D design template data')),
                ('thumbnail_url', models.CharField(blank=True, max_length=500)),
                ('is_public', models.BooleanField(default=False, help_text='Available to other brands')),
                ('is_featured', models.BooleanField(default=False)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='brands.brand')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Brand Template',
                'verbose_name_plural': 'Brand Templates',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BrandOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary owner with full access')),
                ('permissions', models.JSONField(blank=True, default=dict, help_text='Specific permissions for this owner')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='brands.brand')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_brands', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Brand Owner',
                'verbose_name_plural': 'Brand Owners',
                'unique_together': {('brand', 'user')},
            },
        ),
    ]
